import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Link from 'next/link'
import { gql, useQuery } from "@apollo/client";
import { useUser } from '@auth0/nextjs-auth0';
import { TaskCard } from '../components/TaskCard';

const UserQuery = gql`
  query($email:String!) {
    user(email:$email){
      id
    }
  }
`;

const AllTaskQuery = gql`
query allTasksQuery($first: Int, $after: String) {
  tasks(first: $first, after: $after){
    pageInfo {
      endCursor
      hasNextPage
    }
    edges {
      cursor
      node {
        id
        title
        description
        category
        deleted
        done
        userId
        }
    }
  }
  }
`


export default function Home() {
  const { user } = useUser();

  const { data: userId } = useQuery(UserQuery, {
    variables: {
      email: user?.email
    }
  });

  const { data, error, loading, fetchMore } = useQuery(AllTaskQuery, {
    variables: {
      first: 1,
    }
  });

  if (!user) {
    return (
      <div className="flex items-center justify-center">
        <h1>If you want to create a task-list, you need to Login</h1>
        <Link href="/api/auth/login">
          <a className=" block bg-gray-100 border-0 py-1 px-3 focus:outline-none hover:bg-gray-200 rounded text-base mt-4 md:mt-0">
            Login
          </a>
        </Link>
      </div>
    );
  }


  if (loading) return <p>Loading...</p>

  if (error) return <p>Ooops, something went wrong {error.message}</p>

  const { endCursor, hasNextPage } = data?.tasks.pageInfo;

  return (
    <div className={styles.container}>
      <Head>
        <title>Task App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"
        />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/icon?family=Material+Icons"
        />
      </Head>
      <div className="container mx-auto max-w-5xl my-20 px-5">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-5">
          {data?.tasks.edges.map(({ node }, i) => (
            // <Link href={`/link/${node.id}`} key={i}>

            <TaskCard
              title={node.title}
              category={node.category}
              id={node.id}
              description={node.description}
              done={node.done}
            />

            // </Link>
          ))}
        </div>
        <div>
          {hasNextPage ? (
            <button
              className="px-4 py-2 bg-blue-500 text-white rounded my-10"
              onClick={() => {
                fetchMore({
                  variables: { after: endCursor },
                });
              }}
            >
              more
            </button>
          ) : (
            <p className="my-10 text-center font-medium">
              You've reached the end!
            </p>
          )}
        </div>
      </div>
    </div>
  )
}
